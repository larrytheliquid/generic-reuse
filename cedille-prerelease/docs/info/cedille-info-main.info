This is cedille-info-main.info, produced by makeinfo version 6.1 from
cedille-info-main.texi.


File: cedille-info-main.info,  Node: Top,  Next: cedille mode commands,  Up: (dir)

Main
****

This manual is for Cedille.  Lots of interesting Cedille facts can go
here!

* Menu:

* cedille mode commands::       A list of cedille mode command shortcuts with brief description
* unicode shortcuts::           A list of keyboard shortcuts for unicode symbols
* minor modes::                 Cedille mode has several minor modes providing additional information
* options::                     A description of the options file
* credits::                     Who has contributed to the Cedille tool
* Index::                       Here is the index


File: cedille-info-main.info,  Node: cedille mode commands,  Next: unicode shortcuts,  Prev: Index,  Up: Top

1 cedille-mode commands
***********************

Cedille mode supports the following commands:

2 Navigation
************

'f/F'
     Navigate to the next same-level node in the parse tree

'b/B'
     Navigate to the previous same-level node in the parse tree

'p'
     Navigate to the parent of the current node in the parse tree

'n'
     Navigate to the previously visited child (first by default) node of
     the current node in the parse tree

'a/e'
     Navigate to the first/last node in the current level of the parse
     tree

'r/R'
     Select next/previous error

't/T'
     Select first/last error in file

'j'
     Jump to location associated with selected node

'g'
     Clear current selection

',/.'
     Navigate to the previous/next page in browsing history

'</>'
     Navigate to the first/last page in browsing history

3 Information
*************

'i/I'
     Toggle info mode (provides information about the currently selected
     node)

'c/C'
     Toggle context mode (provides information about the context of the
     currently selected term)

's/S'
     Toggle summary mode (provides information about the contents of the
     entire file)

'x/X'
     Toggle scratch mode

'h'
     Open information documents describing how to use Cedille mode

'1'
     Close all emacs windows except the current one; convenience
     keystroke for emacs command delete-other-windows.

'm'
     Highlight/unhighlight all instances of the selected symbol
     (context-sensitive)

4 Interactive
*************

If associated with a span (and the beginning and end characters of the
span were not deleted), each of these commands will be re-called each
time you enter into Cedille mode.  They all begin with the 'C-i' prefix.

'C-i n'
     Show normalization of selected span.  If no span is selected, this
     will prompt an expression to normalize.

'C-i h'
     Like 'C-i n', but shows head-normalization

'C-i e'
     Show erasure of selected span.  If no span is selected, this will
     prompt an expression to erase.

'C-i r'
     Remove all interactive attributes associated with the selected span

'C-i R'
     Remove all interactive attributes

'C-i b'
     Open the beta-reduction buffer with an input expression.  Copies
     global scope and local scope if a span is selected.

'C-i B'
     Open the beta-reduction buffer with the selected span

'C-i t'
     Open the beta-reduction buffer with the selected span's expected
     type (or type if there is no expected type)

5 Other
*******

'M-x'
     Copy the selected span to the scratch buffer

'C-h <int>'
     Alters highlighting scheme depending on value of <int>: 1: default
     highlighting 2: language level highlighting 3: checking mode
     highlighting

'q/M-s/C-g'
     Quit Cedille mode

'K'
     Kill the Cedille process and restart it if it is taking an
     unusually long time

'$'
     Open customization window for configuring Cedille mode


File: cedille-info-main.info,  Node: unicode shortcuts,  Next: minor modes,  Prev: cedille mode commands,  Up: Top

6 unicode
*********

Here is a very short survey of the Unicode symbols used in Cedille,
together with the shortcut to type them in the emacs mode.

'\l'
     Produces Œª (lambda), for anonymous functions

'\L'
     Produces Œõ (capital lambda), for anonymous functions taking in
     compile-time arguments (erased at run-time)

'\r'
     Produces ‚Üí (right arrow)

'\a'
     Produces ‚àÄ (forall), for quantification over terms which are erased
     at run-time, and also over type-level expressions

'\B'
     Produces ‚ñ° (white square), for the sole superkind of the language

'\P'
     Produces Œ† (capital pi), for dependent function types and for all
     type-level quantification (even over types)

'\s'
     Produces ‚òÖ (black star), the kind of types

'\S'
     Produces ‚òÜ (white star), used in lifting types

'\.'
     Produces ¬∑ (center dot), for applying a function (term- or
     type-level) to a type-level argument

'\f'
     Produces ‚óÇ (leftwards double arrow), for checking a term against a
     type, or type against a kind, at the top-level

'\u'
     Produces ‚Üë (upwards arrow), for lifting

'\h'
     Produces ‚óè (black circle), a hole representing a missing subterm

'\k'
     Produces ùíå (math bold italic small k), all kind-level defined
     symbols must start with this character

'\i'
     Produces Œπ (iota), for dependent intersections

'\='
     Produces ‚âÉ (asymptotically equal to), for propositional equality

'\b'
     Produces Œ≤ (beta), for proving propositional equalities which
     follow just by beta-eta reduction

'\e'
     Produces Œµ (epsilon), for reducing the sides of an equation

'\R'
     Produces œÅ (rho), for rewriting with an equation

'\F'
     Produces œÜ (phi), for proving that if t ‚âÉ t', and t has type T,
     then t' also has type T

'\y'
     Produces œÇ (lowercase final sigma), for proving t ‚âÉ t' from t' ‚âÉ t.

'\t'
     Produces Œ∏ (theta), for elimination with a motive (of McBride)

'\x'
     Produces œá (chi), for changing the form of the expected or computed
     classifier to a definitionally equivalent one

'\rho'
     Produces œÅ (rho)

'\theta'
     Produces Œ∏ (theta)

'\epsilon'
     Produces Œµ (epsilon)


File: cedille-info-main.info,  Node: context mode,  Next: summary mode,  Prev: inspect mode,  Up: minor modes

7 Context mode
**************

Context mode for Cedille allows the user to see the context of the
currently selected node, making it easy to find and make use of all
bound symbols.  To enter context mode, select a node and press 'C' and
you will open up the context mode buffer and jump to it.  If you just
want to open the context mode buffer (but not jump to it), press 'c'
instead.

   Context mode has several built-in features to organize data:

   * Sort entries alphabetically or by binding position

   * Filter entries according to common properties.  Only one filter may
     be active at a time.

   * Show or hide shadowed variables

8 Controls
**********

'a/z'
     Sort all entries alphabetically from a-z/z-a

'd/u'
     Sort all entries according to binding position in parse tree
     (descending/ascending)

'e'
     Filter out entries that do not have an '‚âÉ' symbol

'E'
     Filter out entries that are not literal statements of Œ≤-equality

'f'
     Clear current filter so all entries are shown

's'
     Toggle display of shadowed variables

'w'
     Hide or unhide type or kind of line currently under cursor

'W'
     Unhide all types and kinds hidden with 'w'

'c/C'
     Close the context mode window

'h'
     Open information page for context mode

9 Common commands
*****************

'M-c'
     Copy the contents of the current buffer to the scratch buffer

'+'
     Increase the size of the buffer by one line

'-'
     Decrease the size of the buffer by one line

'='
     Reset the buffer's size

'f'
     Moves to the next defined variable in the buffer

'b'
     Moves to the previous defined variable in the buffer

'a'
     Moves to the first defined variable in the buffer

'e'
     Moves to the last defined variable in the buffer

'j'
     Jumps to the definition of the selected variable


File: cedille-info-main.info,  Node: credits,  Next: Index,  Prev: options,  Up: Top

10 Credits
**********

Summer 2016: Richard Blair, Ananda Guneratne, Matthew Heimerdinger, Chad Reynolds, Aaron Stump

Spring 2016: Aaron Stump

2015: Carl A. Olson created se-mode


File: cedille-info-main.info,  Node: options,  Next: credits,  Prev: minor modes,  Up: Top

11 cedille-mode options
***********************

The options file resides in ~/.cedille/options and consists of a list of
options, each on its own line, with a terminating period (".").  The
available options are:

'import-directories "/path/to/dir"'
     This specifies a directory where Cedille will search for imported
     files.  Any number of directories may be listed, each on its own
     line.  They will be searched after the current directory.
     Currently, it is not recommended to have two files with the same
     name.

'use-cede-files = [true/false]'
     Enables/disables the Cedille backend's use of .cede files

'make-rkt-files = [true/false]'
     Enables/disables the Cedille backend's generation of .rkt files

'generate-logs = [true/false]'
     Enables/disables generation of log files (.cedille/log)

'show-qualified-vars = [true/false]'
     Enables/disables the printing of fully-qualified variables


File: cedille-info-main.info,  Node: minor modes,  Next: options,  Prev: unicode shortcuts,  Up: Top

12 Minor modes for cedille
**************************

Cedille has three minor modes that provide information about the file:

* Menu:

* inspect mode::                Provides information about the currently selected node
* context mode::                Displays the types and kinds of all variables in the scope of the selected node
* summary mode::                Displays the types and kinds of every top-level entity in the file
* beta-reduce mode::            Beta-reduction explorer

13 Common commands
******************

'M-c'
     Copy the contents of the current buffer to the scratch buffer

'+'
     Increase the size of the buffer by one line

'-'
     Decrease the size of the buffer by one line

'='
     Reset the buffer's size

'f'
     Moves to the next defined variable in the buffer

'b'
     Moves to the previous defined variable in the buffer

'a'
     Moves to the first defined variable in the buffer

'e'
     Moves to the last defined variable in the buffer

'j'
     Jumps to the definition of the selected variable


File: cedille-info-main.info,  Node: inspect mode,  Next: context mode,  Up: minor modes

14 Inspect mode
***************

Inspect mode for Cedille provides basic information about a node.  To
enter inspect mode, select a node and press 'I' and you will open up the
inspect mode buffer and jump to it.  If you just want to open the
inspect mode buffer (but not jump to it), press 'i' instead.

   Inspect mode may contain the following pieces of information:

   * The sort of entity that the node represents

   * The type or kind of the node

   * The file location in which the entity represented by the node is
     defined

15 Controls
***********

'i/I'
     Close the inspect mode window

16 Common commands
******************

'M-c'
     Copy the contents of the current buffer to the scratch buffer

'+'
     Increase the size of the buffer by one line

'-'
     Decrease the size of the buffer by one line

'='
     Reset the buffer's size

'f'
     Moves to the next defined variable in the buffer

'b'
     Moves to the previous defined variable in the buffer

'a'
     Moves to the first defined variable in the buffer

'e'
     Moves to the last defined variable in the buffer

'j'
     Jumps to the definition of the selected variable


File: cedille-info-main.info,  Node: summary mode,  Next: beta-reduce mode,  Prev: context mode,  Up: minor modes

17 Summary mode
***************

Displays a summary of every global definition in the file.

18 Common commands
******************

'M-c'
     Copy the contents of the current buffer to the scratch buffer

'+'
     Increase the size of the buffer by one line

'-'
     Decrease the size of the buffer by one line

'='
     Reset the buffer's size

'f'
     Moves to the next defined variable in the buffer

'b'
     Moves to the previous defined variable in the buffer

'a'
     Moves to the first defined variable in the buffer

'e'
     Moves to the last defined variable in the buffer

'j'
     Jumps to the definition of the selected variable


File: cedille-info-main.info,  Node: beta-reduce mode,  Prev: summary mode,  Up: minor modes

19 Beta-reduce mode
*******************

Beta-reduce mode is a "beta-reduction explorer".  There are three ways
to enter beta-reduce mode:
  1. C-i b Enter beta-reduce mode with a prompted expression.  Copies
     global scope and local scope if a span is selected.

  2. C-i B Enter beta-reduce mode with the selected span and its scope

  3. C-i t Enter beta-reduce mode with the selected span's expected type
     and its scope

20 Controls
***********

'C-i n'
     Replace the selected span with its normalization

'C-i h'
     Replace the selected span with its head-normalization

'C-i ='
     Replace the selected span with a input expression, if convertible

'C-i r'
     Synthesize an equational type from an input expression and rewrite
     the selected span using it

'C-i R'
     Same as "C-i r", but beta-reduces the selected span as it looks for
     matches

'C-i p'
     Prints an outline of how to reconstruct each normalization,
     conversion, and rewrite applied to the scratch buffer

'C-i ,'
     Undo

'C-i .'
     Redo


File: cedille-info-main.info,  Node: Index,  Prev: credits,  Up: Top

Index
*****



Tag Table:
Node: Top95
Node: cedille mode commands746
Node: unicode shortcuts3794
Node: context mode6119
Node: credits8066
Node: options8336
Node: minor modes9360
Node: inspect mode10510
Node: summary mode11763
Node: beta-reduce mode12528
Node: Index13671

End Tag Table

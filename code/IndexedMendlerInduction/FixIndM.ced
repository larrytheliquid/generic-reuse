module FixIndM.

import SubstComp.
import Id.
import IIdMapping.
import IFixM.
import IFixIndM.
import IInductionM.
import Empty.
import UnitLift.
import Unit.
import Sigma.


AlgM ◂ (★ ➔ ★) ➔ ★ ➔ ★ = λ F : ★ ➔ ★. λ A : ★.
  ∀ R : ★. (R ➔ A) ➔ F · R ➔ A.


PrfAlgM ◂ Π F : ★ ➔ ★. Π imap : IdMapping · F. Π X : ★. (X ➔ ★) ➔
   (F · X ➔ X) ➔ ★ = 
  λ F : ★ ➔ ★.
  λ imap : IdMapping · F.
  λ X : ★.
  λ Q : (X ➔ ★).
  λ alg : (F · X ➔ X). 
 ∀ R : ★. ∀ c : (Id · R · X). 
 (Π r : R. Q (elimId~ · R · X -c r)) ➔
 Π gr : F · R.  Q (alg (elimId~ · (F · R) · (F · X) -(imap · R · X  c) gr) ). 


FixIndM ◂ Π F : ★ ➔ ★. IdMapping · F ➔ ★ 
 = λ F : ★ ➔ ★. λ imap : IdMapping · F. IFixIndM · Unit · (UnitF · F) (uimapF · F imap) unit.


inFixIndM ◂ ∀ F : ★ ➔ ★. ∀ imap : IdMapping · F.
 F · (FixIndM · F imap) ➔ FixIndM · F imap  
 = Λ F. Λ imap. iinFixIndM · Unit · (UnitF · F) -(uimapF · F imap) -unit.

convAlg ◂ ∀ F : ★ ➔ ★. ∀ imap : IdMapping · F. ∀ A : ★. AlgM · F · A ➔ IAlgM · Unit · (UnitF · F) · (λ u : Unit. A) 
 = Λ F. Λ imap. Λ A. λ alg. Λ R. λ r. Λ i. λ un. alg · (R unit) (r -unit) un .

foldM ◂ ∀ F : ★ ➔ ★. ∀ imap : IdMapping · F. ∀ A : ★. AlgM · F · A ➔ FixIndM · F imap ➔ A
 = Λ F. Λ imap. Λ A. λ alg. λ fix. ifoldM · Unit · (UnitF · F) · (λ u : Unit. A) (convAlg · F -imap · A alg) -unit fix.1.


indFixIndM ◂ ∀ F : ★ ➔ ★. ∀ imap : IdMapping · F.
 ∀ Q : FixIndM · F imap ➔ ★.
 PrfAlgM · F imap · (FixIndM · F imap) · Q (inFixIndM · F -imap) ➔
 Π e : FixIndM · F imap. Q e
 = Λ F. Λ imap. Λ Q. λ q. λ e. induction · Unit · (UnitF · F) -(uimapF · F imap) · (λ i : Unit. λ v : IFixIndM · Unit · (UnitF · F) (uimapF · F imap) i. Q (ρ ς (etaUnit i) - v)) 
  (Λ R. Λ ic. λ ih. Λ i. λ gr. q · (R unit) -(ic -unit) (λ r. ih -unit r) gr) 
  -unit e .
 
outFixIndM ◂ ∀ F : ★ ➔ ★. ∀ imap : IdMapping · F.
 FixIndM · F imap ➔  F · (FixIndM · F imap) = Λ F. Λ imap. λ v. indFixIndM · F -imap · 
 (λ _ : FixIndM · F imap. F · (FixIndM · F imap)) (Λ R. Λ id. λ _. λ fr. elimId~ · (F · R) · (F · (FixIndM · F imap)) 
  -(imap · R · (FixIndM · F imap) id) fr) v .

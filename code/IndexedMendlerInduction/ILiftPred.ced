module ILiftPred.

import Sigma.
import Product.
import IIdMapping.
import IFixM.
import IFixIndM.


WithWitness ◂ Π X : ★. Π Y : ★.  
 (X ➔ ★) ➔ (X ➔ Y) ➔ Y ➔ ★ 
 = λ X : ★. λ Y : ★. λ Q : X ➔ ★. 
   λ cast : X ➔ Y. λ y : Y.
   Sigma · X · (λ x : X. Product · {y ≃ cast x} · (Q x)).


Lift ◂ Π I : ★. Π F : ((I ➔ ★) ➔ (I ➔ ★)). Π imap : IIdMapping · I · F.
 (Π i : I. IFixIndM · I · F imap i ➔ ★) 
 ➔ Π i : I. IFixM · I · F i ➔ ★ 
 = λ I : ★. λ F : ((I ➔ ★) ➔ (I ➔ ★)). λ imap : IIdMapping · I · F.
 λ Q : Π i : I. IFixIndM · I · F imap i ➔ ★. 
  λ i : I. λ e : IFixM · I · F i. WithWitness · (IFixIndM · I · F imap i) · (IFixM · I · F i) · (Q i) (λ x. x.1) e.



LiftProp1 ◂ ∀ I : ★. ∀ F : ((I ➔ ★) ➔ (I ➔ ★)). ∀ imap : IIdMapping · I · F. ∀ Q : Π i : I. IFixIndM · I · F imap i ➔ ★.
 ∀ i : I. ∀ e : IFixIndM · I · F imap i. (Lift · I · F imap · Q i e.1) ➔ Q i e 
 = Λ I. Λ F. Λ imap.  Λ Q. Λ i. Λ e. λ pr. 
 ρ (projProd1 · {e ≃ (proj1 · (IFixIndM · I · F imap) · 
   (λ x' : (IFixIndM · I · F imap). Product · {e ≃ x'.1} · (Q x')) pr)} · 
   (Q i (proj1 · (IFixIndM · I · F imap i) · (λ x' : (IFixIndM · I · F imap i). Product · {e ≃ x'} · (Q i x')) pr)) 
   (proj2 · (IFixIndM · I · F imap i) · (λ x' : (IFixIndM · I · F imap i). Product · {e ≃ x'} · (Q i x')) pr)) -   
   (projProd2 · {e ≃ (proj1 pr)} · 
   (Q i (proj1 · (IFixIndM · I · F imap i) · (λ x' : (IFixIndM · I · F imap i). Product · {e ≃ x'} · (Q i x')) pr)) 
   (proj2 · (IFixIndM · I · F imap i) · (λ x' : (IFixIndM · I · F imap i). Product · {e ≃ x'} · (Q i x')) pr)).




LiftProp2 ◂ ∀ I : ★ . ∀ F : ((I ➔ ★) ➔ (I ➔ ★)). ∀ imap : IIdMapping · I · F.  
 ∀ Q : Π i : I. IFixIndM · I · F imap i ➔ ★.
 ∀ i : I. Π e : IFixIndM · I · F imap i. Q i e ➔ (Lift · I · F imap · Q i e.1) 
 = Λ I. Λ F. Λ imap.  Λ Q. Λ i. λ e. λ pr. pair · (IFixIndM · I · F imap i) · 
 (λ x' : (IFixIndM · I · F imap i). 
 Product · {e ≃ x'} · (Q i x')) e (pairProd · {e ≃ e} · (Q i e) β pr).



LiftProp3 ◂ ∀ I : ★. ∀ F : ((I ➔ ★) ➔ (I ➔ ★)). ∀ imap : IIdMapping · I · F.
 ∀ Q : Π i : I. IFixIndM · I · F imap i ➔ ★.
 ∀ i : I. ∀ e : IFixM · I · F i. Lift · I · F imap · Q i e ➔ (IFixIndM · I · F imap i) 
 = Λ I. Λ F. Λ imap. Λ Q. Λ i. Λ e. λ pr. proj1 · (IFixIndM · I · F imap i) · 
 (λ x' : (IFixIndM · I · F imap i). Product · {e ≃ x'} · (Q i x')) pr. 




LiftProp4 ◂ ∀ I : ★. ∀ F : ((I ➔ ★) ➔ (I ➔ ★)). ∀ imap : IIdMapping · I · F. 
 ∀ Q : Π i : I. IFixIndM · I · F imap i ➔ ★. 
  ∀ i : I. ∀ e : IFixM · I · F i. ∀ p : Lift · I · F imap · Q i e. 
 {LiftProp3 · I · F -imap · Q -i -e  p ≃ e} = Λ I. Λ F. Λ imap. Λ Q. Λ i. Λ e. Λ pr. 
 ρ (projProd1 · {e ≃ (proj1 pr)} · 
    (Q i (proj1 · (IFixIndM · I · F imap i) · (λ x' : (IFixIndM · I · F imap i). 
      Product · {e ≃ x'} · (Q i x')) pr)) (proj2 · (IFixIndM · I · F imap i) · 
  (λ x' : (IFixIndM · I · F imap i). Product · {e ≃ x'} · (Q i x')) pr)) - β.



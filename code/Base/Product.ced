module Product.

import Sigma.

Product ◂ ★ ➔ ★ ➔ ★ = λ A : ★. λ B : ★. Sigma · A · (λ _ : A. B).

pairProd ◂ ∀ A : ★. ∀ B : ★. A ➔ B ➔ Product · A · B =
  Λ A. Λ B. λ a. λ b. pair · A · (λ _ : A. B) a b.

elimProd ◂ ∀ A : ★. ∀ B : ★. ∀ P : Product · A · B ➔ ★.
  (Π a : A. Π b : B. P (pairProd · A · B a b)) ➔ Π s : Product · A · B. P s
  = Λ A. Λ B. elimSigma · A · (λ a : A. B).

projProd1 ◂ ∀ A : ★. ∀ B : ★. Product · A · B  ➔  A = Λ A. Λ B. proj1 · A · (λ _ : A. B).
projProd2 ◂ ∀ A : ★. ∀ B : ★. Product · A · B  ➔  B = Λ A. Λ B. proj2 · A · (λ _ : A. B).

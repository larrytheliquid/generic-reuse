module EnrFix.
import Sigma.
import Id.
import IIdMapping.
import IFixM.
import IFixIndM.
import IInductionM.
import FixIndM.
import Unit.
import UnitLift.

Const ◂ Π I : ★. Π J : ★. J ➔ ★ = λ I : ★. λ J : ★. λ j : J. I.

jfix2ifix ◂ ∀ J : ★. ∀ G : (J ➔ ★) ➔ (J ➔ ★). ∀ I : ★. ∀ F : (I ➔ ★) ➔ (I ➔ ★).
  Π imapG : IIdMapping · J · G.
  Π imapF : IIdMapping · I · F.
  Π ralg : IAlgM · J · G · (Const · I · J). 
  Π c : ∀ Y : J ➔ ★. ∀ X : I ➔ ★. Π rfun : ∀ j : J. Y j ➔ I. 
    (∀ j : J. IdDep · (Y j) · (λ y : Y j. X (rfun -j y))) ➔ 
    ∀ j : J. IdDep · (G · Y j) · (λ ys : G · Y j. F · X (ralg · Y rfun -j ys)).
  ∀ j : J. IdDep · (IFixIndM · J · G imapG j)
    · (λ y : IFixIndM · J · G imapG j. IFixIndM · I · F imapF (ifoldM · J · G · (Const · I · J) ralg -j y.1))
  = Λ J. Λ G. Λ I. Λ F. λ imapG. λ imapF. λ ralg. λ c1. iindFixIndM · J · G -imapG
  · (λ j : J. IdDepCod · (IFixIndM · J · G imapG j)
    · (λ y : IFixIndM · J · G imapG j. IFixIndM · I · F imapF (ifoldM · J · G · (Const · I · J) ralg -j y.1)))
  (Λ R. Λ c2. λ ih. Λ j. λ rs. pairIdDep
  · (IFixIndM · J · G imapG j)
  · (λ y : IFixIndM · J · G imapG j. IFixIndM · I · F imapF (ifoldM · J · G · (Const · I · J) ralg -j y.1))
  -(iinFixIndM · J · G -imapG -j
    (elimId · (G · R j) · (G · (IFixIndM · J · G imapG) j) (imapG · R · (IFixIndM · J · G imapG) c2 -j) rs))
  (iinFixIndM · I · F -imapF
    -(ifoldM · J · G · (Const · I · J) ralg -j (iinFixIndM · J · G -imapG -j
      (elimId · (G · R j) · (G · (IFixIndM · J · G imapG) j) (imapG · R · (IFixIndM · J · G imapG) c2 -j) rs)).1)
    (elimIdDep · (G · R j) · (λ rs' : G · R j.
      F · (IFixIndM · I · F imapF)
        (ifoldM · J · G · (Const · I · J) ralg -j (iinFixIndM · J · G -imapG -j
          (elimId · (G · R j) · (G · (IFixIndM · J · G imapG) j) (imapG · R · (IFixIndM · J · G imapG) c2 -j) rs')).1)
      )
      (c1 · R · (IFixIndM · I · F imapF)
        (Λ j'. λ r. ifoldM · J · G · (Const · I · J) ralg -j' (elimId~ · (R j') · (IFixIndM · J · G imapG j') -(c2 -j') r).1)
        ih -j) rs)
  ) β).  

fix2ifix ◂ ∀ G : ★ ➔ ★. ∀ I : ★. ∀ F : (I ➔ ★) ➔ (I ➔ ★).
  Π imapG : IdMapping · G.
  Π imapF : IIdMapping · I · F.
  Π ralg : AlgM · G · I. 
  Π c : ∀ Y : ★. ∀ X : I ➔ ★. Π rfun : Y ➔ I. IdDep · Y · (λ y : Y. X (rfun y)) ➔ IdDep · (G · Y) · (λ ys : G · Y. F · X (ralg · Y rfun ys)).
  IdDep · (FixIndM · G imapG) · (λ y : FixIndM · G imapG. IFixIndM · I · F imapF (foldM · G -imapG · I ralg y))
  = Λ G. Λ I. Λ F. λ imapG. λ imapF. λ ralg. λ c1. jfix2ifix
  · Unit · (UnitF · G) · I · F (uimapF · G imapG) imapF (ualg · G -imapG · I ralg)
  (Λ Y. Λ X. λ rfun. λ c2. Λ j. λ ys. pairIdDep
  · (UnitF · G · Y j)
  · (λ ys' : UnitF · G · Y j. F · X (ualg · G -imapG · I ralg · Y rfun -unit ys')) -ys
  (elimIdDep · (G · (Y unit)) · (λ ys' : G · (Y unit). F · X (ralg · (Y unit) (rfun -unit) ys'))
    (c1 · (Y unit) · X (rfun -unit) (c2 -unit)) ys)
  β) -unit.

JFix2IFixP ◂ ★ = ∀ J : ★. ∀ G : (J ➔ ★) ➔ (J ➔ ★).
  ∀ I : ★. ∀ F : (I ➔ ★) ➔ (I ➔ ★).
  Π imapG : IIdMapping · J · G.
  Π imapF : IIdMapping · I · F.
  Π fog : I ➔ J. 
  ∀ P : Π i : I. IFixIndM · J · G imapG (fog i) ➔ ★.
  (∀ Y : J ➔ ★. ∀ X : I ➔ ★.
    Π c1 : ∀ j : J. Id · (Y j) · (IFixIndM · J · G imapG j).
    Π c2 : ∀ i : I. IdDep · (Y (fog i)) · (λ y : (Y (fog i)). P i (elimId · (Y (fog i)) · (IFixIndM · J · G imapG (fog i)) (c1 -(fog i)) y) ➾ X i).
    ∀ i : I. IdDep · (G · Y (fog i)) · (λ ys : G · Y (fog i).
      P i (iinFixIndM · J · G -imapG -(fog i)
        (elimId · (G · Y (fog i)) · (G · (IFixIndM · J · G imapG) (fog i)) (imapG · Y · (IFixIndM · J · G imapG) c1 -(fog i)) ys))
      ➾ F · X i)
  ) ➔
  ∀ i : I. IdDep · (IFixIndM · J · G imapG (fog i)) · (λ y : IFixIndM · J · G imapG (fog i). P i y ➾ IFixIndM · I · F imapF i)
.

Fix2IFixP ◂ ★ = ∀ G : ★ ➔ ★. ∀ I : ★.
  ∀ F : (I ➔ ★) ➔ (I ➔ ★).
  Π imapG : IdMapping · G.
  Π imapF : IIdMapping · I · F.
  ∀ P : I ➔ FixIndM · G imapG ➔ ★.
  (∀ Y : ★. ∀ X : I ➔ ★.
    Π c1 : Id · Y · (FixIndM · G imapG).
    Π c2 : ∀ i : I. IdDep · Y · (λ y : Y. P i (elimId · Y · (FixIndM · G imapG) c1 y) ➾ X i).
    ∀ i : I. IdDep · (G · Y) · (λ ys : G · Y.
      P i (inFixIndM · G -imapG (elimId · (G · Y) · (G · (FixIndM · G imapG)) (imapG · Y · (FixIndM · G imapG) c1) ys))
      ➾ F · X i)
  ) ➔
  ∀ i : I. IdDep · (FixIndM · G imapG) · (λ y : FixIndM · G imapG. P i y ➾ IFixIndM · I · F imapF i)
.

module FogFun.
import Id.

allArr2arr ◂ ∀ I : ★. ∀ X : I ➔ ★. ∀ X' : I ➔ ★. ∀ Y : ★. ∀ Y' : ★.
  Π r : Y ➔ I.
  Π c1 : IdDep · Y · (λ y : Y. X (r y)).
  Π c2 : ∀ i : I. Id · (X' i) · Y'.
  Id · (∀ i : I. X i ➔ X' i) · (Y ➔ Y')
  = Λ I. Λ X. Λ X'. Λ Y. Λ Y'. λ r. λ c1. λ c2. λ f. pairId
  · (∀ i : I. X i ➔ X' i) · (Y ➔ Y') -f
  (λ y. elimId · (X' (r y)) · Y' (c2 -(r y))
  (f -(r y) (elimIdDep · Y · (λ y : Y. X (r y)) c1 y))
  ) β.

allPi2pi ◂ ∀ I : ★. ∀ X : I ➔ ★. ∀ X' : Π i : I. X i ➔ ★. ∀ Y : ★. ∀ Y' : Y ➔ ★.
  Π r : Y ➔ I.
  Π c1 : IdDep · Y · (λ a : Y. X (r a)).
  Π c2 : ∀ i : I. Id · (X i) · Y.
  Π c3 : ∀ i : I. Π x : X i. Id · (X' i x) · (Y' (elimId · (X i) · Y (c2 -i) x)).
  Id · (∀ i : I. Π x : X i. X' i x) · (Π y : Y. Y' y)
  = Λ I. Λ X. Λ X'. Λ Y. Λ Y'. λ r. λ c1. λ c2. λ c3. λ f. pairId
  · (∀ i : I. Π x : X i. X' i x) · (Π y : Y. Y' y) -f
  (λ y. elimId · (X' (r y) (elimIdDep · Y · (λ y2 : Y. X (r y2)) c1 y)) · (Y' y)
  (c3 -(r y) (elimIdDep · Y · (λ y2 : Y. X (r y2)) c1 y))
  (f -(r y) (elimIdDep · Y · (λ y2 : Y. X (r y2)) c1 y))
  ) β.


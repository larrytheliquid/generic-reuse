module FogFix.
import Id.
import Aux.
import IIdMapping.
import IFixIndM.
import IInductionM.
import Sigma.
import Unit.
import UnitLift.
import FixIndM.

ifix2jfix ◂ ∀ I : ★. ∀ F : (I ➔ ★) ➔ (I ➔ ★). ∀ J : ★. ∀ G : (J ➔ ★) ➔ (J ➔ ★).
  Π imapF : IIdMapping · I · F.
  Π imapG : IIdMapping · J · G.
  Π fog : I ➔ J. 
  Π c : ∀ X : I ➔ ★.  ∀ Y : J ➔ ★. (∀ i : I . Id · (X i) · (Y (fog i))) ➔ ∀ i : I. Id · (F · X i) · (G · Y (fog i)).
  ∀ i : I. Id · (IFixIndM · I · F imapF i) · (IFixIndM · J · G imapG (fog i))
  = Λ I. Λ F. Λ J. Λ G. λ imapF. λ imapG. λ fog. λ c1. iindFixIndM · I · F -imapF
  · (λ i : I. IdCod · (IFixIndM · I · F imapF i) · (IFixIndM · J · G imapG (fog i)))
  (Λ R. Λ c2. λ ih. Λ i. λ rs. pairId
  · (IFixIndM · I · F imapF i) · (IFixIndM · J · G imapG (fog i))
  -(iinFixIndM · I · F -imapF -i
    (elimId · (F · R i) · (F · (IFixIndM · I · F imapF) i) (imapF · R · (IFixIndM · I · F imapF) c2 -i) rs))
  (iinFixIndM · J · G -imapG -(fog i)
    (elimId · (F · R i) · (G · (IFixIndM · J · G imapG) (fog i))
      (c1 · R · (IFixIndM · J · G imapG) ih -i) rs)
  ) β).

ifix2fix ◂ ∀ I : ★. ∀ F : (I ➔ ★) ➔ (I ➔ ★). ∀ G : ★ ➔ ★. 
  Π imapF : IIdMapping · I · F.
  Π imapG : IdMapping · G.
  Π c : ∀ X : I ➔ ★.  ∀ Y : ★. (∀ i : I . Id · (X i) · Y) ➔ ∀ i : I. Id · (F · X i) · (G · Y).
  ∀ i : I. Id · (IFixIndM · I · F imapF i) · (FixIndM · G imapG)
  = Λ I. Λ F. Λ G. λ imapF. λ imapG. λ c1. ifix2jfix
  · I · F · Unit · (UnitF · G) imapF (uimapF · G imapG) (λ _. unit) 
  (Λ X. Λ Y. λ c2. Λ i. λ xs. pairId
  · (F · X i) · (UnitF · G · Y unit) -xs
  (elimId · (F · X i) · (G · (Y unit))
    (c1 · X · (Y unit) c2 -i) xs)
  β).


module EnvT.
import Tp.
import Term.
import Ctx.
import Mem.
import Product.

Ctx2 ◂ ★ = Product · Ctx · Ctx.

projCtx1 ◂ Ctx2 ➔ Ctx = projProd1 · Ctx · Ctx.
projCtx2 ◂ Ctx2 ➔ Ctx = projProd2 · Ctx · Ctx.

EnvT ◂ Ctx2 ➔ ★ = λ GD : Ctx2. ∀ A : Tp.
  Mem · Tp A (projCtx1 GD) ➔ Term (pairCtxTp (projCtx2 GD) A).
